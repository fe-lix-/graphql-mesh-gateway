{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/gateway/headers.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mTAQaA,EAAe,GACtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SAACJ,GAAD,UAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAG5E,eACE,GAAM,WADR,YAGA,4FAA6E,uBAAYC,WAAW,KAAvB,QAA7E,uEACA,eACE,GAAM,uCADR,wCAGA,iGAAkF,uBAAYA,WAAW,KAAvB,aAAlF,cAAqJ,uBAAYA,WAAW,KAAvB,oBAArJ,qFAAsS,uBAAYA,WAAW,KAAvB,SAAtS,oFACA,qBAAK,iBAAMA,WAAW,MAClB,UAAa,iBADZ,8xBAmCL,eACE,GAAM,uBADR,wBAGA,8KACA,oBACE,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,0DADQ,sBAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,0DADQ,sBAGpB,eAAIA,WAAW,OAAK,cAAGA,WAAW,KAC9B,KAAQ,8DADQ,2BAItB,eACE,GAAM,oCADR,qCAGA,4MACA,oBACE,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,OAApB,MAAkE,uBAAYA,WAAW,MAAvB,uCAEpE,iFACA,oBACE,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,UAApB,6GACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,cAApB,2HAAsM,uBAAYA,WAAW,MAAvB,YAAtM,SAAoQ,uBAAYA,WAAW,MAAvB,cAApQ,MACA,eAAIA,WAAW,OAAK,uBAAYA,WAAW,MAAvB,cAApB,oHAEF,eACE,GAAM,4BADR,6BAGA,iEAAkD,uBAAYA,WAAW,KAAvB,SAAlD,+UACA,oBACE,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,OAApB,MAAkE,uBAAYA,WAAW,MAAvB,0BAChE,eAAIA,WAAW,OACb,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,SAApB,MAAoE,uBAAYA,WAAW,MAAvB,WAI1E,eACE,GAAM,+BADR,gCAGA,iHAAkG,uBAAYA,WAAW,KAAvB,KAAlG,mBACA,oBACE,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,OAApB,MAAkE,uBAAYA,WAAW,MAAvB,wBAChE,eAAIA,WAAW,OACb,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,SAApB,MAAoE,uBAAYA,WAAW,MAAvB,uBAI1E,2OACA,oBACE,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,OAApB,MAAkE,uBAAYA,WAAW,MAAvB,wBAChE,eAAIA,WAAW,OACb,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,SAApB,MAAoE,uBAAYA,WAAW,MAAvB,sBAGxE,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,OAApB,MAAkE,uBAAYA,WAAW,MAAvB,sCAChE,eAAIA,WAAW,OACb,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,SAApB,MAAoE,uBAAYA,WAAW,MAAvB,6BAQ9EJ,EAAWK,gBAAiB","file":"component---src-pages-gateway-headers-md-4f9a0df12b98095717ba.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/graphql-mesh-gateway/graphql-mesh-gateway/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"headers\"\n    }}>{`Headers`}</h1>\n    <p>{`To specify request headers for your mesh, you can add them inside the `}<inlineCode parentName=\"p\">{`JSON`}</inlineCode>{` file that describes your mesh, or you can add them when querying.`}</p>\n    <h2 {...{\n      \"id\": \"configure-headers-in-your-mesh-file\"\n    }}>{`Configure headers in your mesh file`}</h2>\n    <p>{`To add headers directly to a source handler in your mesh file, for example `}<inlineCode parentName=\"p\">{`mesh.json`}</inlineCode>{`, add the `}<inlineCode parentName=\"p\">{`operationHeaders`}</inlineCode>{` object with key value pairs for your headers. The following example defines the `}<inlineCode parentName=\"p\">{`Store`}</inlineCode>{` header for the Commerce source and multiple headers for the LiveSearch source.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"meshConfig\": {\n    \"sources\": [\n      {\n        \"name\": \"Commerce\",\n        \"handler\": {\n          \"graphql\": {\n            \"endpoint\": \"https://<host>/graphql\",\n            \"operationHeaders\": {\n              \"Store\": \"default\"\n            }\n          }\n        }\n      },\n      {\n        \"name\": \"LiveSearch\",\n        \"handler\": {\n          \"graphql\": {\n            \"endpoint\": \"https://<host>/search/graphql\"\n            \"operationHeaders\": {\n              \"Magento-Environment-Id\": \"<environment_id>\"\n              \"Magento-Website-Code\": \"base\"\n              \"Magento-Store-Code\": \"main_website_store\"\n              \"Magento-Store-View-Code\": \"default\"\n              \"X-Api-Key\": \"search_gql\"\n            }\n          }\n        }\n      }\n    ]\n  },\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"add-context-headers\"\n    }}>{`Add context headers`}</h2>\n    <p>{`Using context headers allows you to inject header values from the context into your mesh. For examples of context headers, select one of the following:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../reference/handlers/openapi.md#dynamic-header-values\"\n        }}>{`OpenAPI handlers`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../reference/handlers/graphql.md#dynamic-header-values\"\n        }}>{`GraphQL handlers`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"../reference/handlers/json-schema.md#dynamic-header-values\"\n        }}>{`JSON schema handlers`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"add-or-update-headers-at-runtime\"\n    }}>{`Add or update headers at runtime`}</h2>\n    <p>{`When you use GraphiQL or another tool to interact with your mesh, you can add headers at runtime that are passed through the mesh to specified handler by using the following format:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Key`}</strong>{`: `}<inlineCode parentName=\"li\">{`GGW-SH-<SourceName>-<HeaderName>`}</inlineCode></li>\n    </ul>\n    <p>{`Using this example, the components of the header name are:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`GGW-SH`}</inlineCode>{` is a required string that indicates to the GraphQL Gateway Server that what follows is a source header.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SourceName`}</inlineCode>{` is the name of your previously created source or handler. The source names in the example in the previous section are `}<inlineCode parentName=\"li\">{`Commerce`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`LiveSearch`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`HeaderName`}</inlineCode>{` is the name of the header you are adding or modifying. Remember to add a corresponding value for your header.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"override-a-default-value\"\n    }}>{`Override a default value`}</h3>\n    <p>{`Consider a scenario where the value of the `}<inlineCode parentName=\"p\">{`Store`}</inlineCode>{` header defined in the previous example is the store view with the most traffic. However, you have additional store views that allow international customers to shop in their native languages and currencies. You can override the predefined value for your UK store view by sending the following header information with your request:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Key`}</strong>{`: `}<inlineCode parentName=\"li\">{`GGW-SH-Commerce-Store`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Value`}</strong>{`: `}<inlineCode parentName=\"li\">{`uk`}</inlineCode></li>\n        </ul>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"add-a-header-to-all-sources\"\n    }}>{`Add a header to all sources`}</h3>\n    <p>{`To send a header to all sources in your mesh, you can replace the source handler name with `}<inlineCode parentName=\"p\">{`*`}</inlineCode>{`. For example:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Key`}</strong>{`: `}<inlineCode parentName=\"li\">{`GGW-SH-*-trackingId`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Value`}</strong>{`: `}<inlineCode parentName=\"li\">{`new-trackingId`}</inlineCode></li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`This can be useful for authorization, authentication, and tracking headers that could be the same across multiple sources. To apply a header to all sources except one, specify that source separately. For example:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Key`}</strong>{`: `}<inlineCode parentName=\"li\">{`GGW-SH-*-trackingId`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Value`}</strong>{`: `}<inlineCode parentName=\"li\">{`new-trackingId`}</inlineCode></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Key`}</strong>{`: `}<inlineCode parentName=\"li\">{`GGW-SH-differentSource-trackingId`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Value`}</strong>{`: `}<inlineCode parentName=\"li\">{`different-trackingId`}</inlineCode></li>\n        </ul>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}