(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[428],{13464:function(e,n,a){"use strict";a.r(n),a.d(n,{_frontmatter:function(){return r},default:function(){return x}});var i,m=a(22122),l=a(19756),t=(a(15007),a(64983)),d=a(99536),o=["components"],r={},p=(i="InlineAlert",function(e){return console.warn("Component "+i+" was not imported, exported, or provided by MDXProvider as global scope"),(0,t.mdx)("div",e)}),s={_frontmatter:r},C=d.Z;function x(e){var n=e.components,a=(0,l.Z)(e,o);return(0,t.mdx)(C,(0,m.Z)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,t.mdx)("h1",{id:"namingconvention-transform"},"namingConvention transform"),(0,t.mdx)("p",null,"The ",(0,t.mdx)("inlineCode",{parentName:"p"},"naming-convention")," transform allows applying naming convention to GraphQL types and GraphQL fields easily."),(0,t.mdx)("h2",{id:"how-to-use"},"How to use?"),(0,t.mdx)("p",null,"Add the following configuration to your Mesh config file:"),(0,t.mdx)("pre",null,(0,t.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "transforms": [\n    {\n      "namingConvention": {\n        "typeNames": "pascalCase",\n        "enumValues": "upperCase",\n        "fieldNames": "camelCase",\n        "fieldArgumentNames": "camelCase"\n      }\n    }\n  ]\n}\n')),(0,t.mdx)(p,{variant:"info",slots:"text",mdxType:"InlineAlert"}),(0,t.mdx)("p",null,"You can see our gRPC example that uses this transform to see its application.\n",(0,t.mdx)("a",{parentName:"p",href:"https://github.com/Urigo/graphql-mesh/tree/master/examples/grpc-example"},"Click here to open the example on GitHub")),(0,t.mdx)("h2",{id:"config-api-reference"},"Config API Reference"),(0,t.mdx)("ul",null,(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"typeNames")," (type: String (",(0,t.mdx)("inlineCode",{parentName:"li"},"camelCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"capitalCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"constantCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"dotCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"headerCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"noCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"paramCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"pascalCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"pathCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"sentenceCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"snakeCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"upperCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"lowerCase"),"))"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"fieldNames")," (type: String (",(0,t.mdx)("inlineCode",{parentName:"li"},"camelCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"capitalCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"constantCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"dotCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"headerCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"noCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"paramCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"pascalCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"pathCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"sentenceCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"snakeCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"upperCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"lowerCase"),"))"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"enumValues")," (type: String (",(0,t.mdx)("inlineCode",{parentName:"li"},"camelCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"capitalCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"constantCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"dotCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"headerCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"noCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"paramCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"pascalCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"pathCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"sentenceCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"snakeCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"upperCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"lowerCase"),"))"),(0,t.mdx)("li",{parentName:"ul"},(0,t.mdx)("inlineCode",{parentName:"li"},"fieldArgumentNames")," (type: String (",(0,t.mdx)("inlineCode",{parentName:"li"},"camelCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"capitalCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"constantCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"dotCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"headerCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"noCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"paramCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"pascalCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"pathCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"sentenceCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"snakeCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"upperCase")," | ",(0,t.mdx)("inlineCode",{parentName:"li"},"lowerCase"),"))")))}x.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-reference-transforms-naming-convention-md-1e526df29fe805fd3ce7.js.map