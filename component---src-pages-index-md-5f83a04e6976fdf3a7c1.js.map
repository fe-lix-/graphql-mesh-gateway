{"version":3,"sources":["webpack://dev-site-documentation-template/./src/pages/index.md"],"names":["name","_frontmatter","InlineAlert","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","variant","slots","parentName","isMDXComponent"],"mappings":"0OAUsBA,E,mEAFTC,EAAe,GAOtBC,GALgBF,EAKY,cALJ,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,4EAC5B,eAASG,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGP,GACF,YACD,OAAO,SAACI,GAAD,UAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,eAG5E,eACE,GAAM,6BADR,+BAGA,inBACA,yYACA,SAACT,EAAD,CAAaU,QAAQ,OAAOC,MAAM,OAAOF,QAAQ,iBACjD,6OACA,eACE,GAAM,eADR,iBAGA,+EACA,oBACE,eAAIG,WAAW,OAAK,mBAAQA,WAAW,MAAnB,qCAApB,+EACA,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,wBAApB,uHACA,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,kBAApB,0FAEF,eACE,GAAM,YADR,aAGA,oBACE,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,qBAApB,6EACA,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,6BAApB,qIAKA,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,2BAApB,gEACA,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,iBAApB,+GAEF,eACE,GAAM,oBADR,qBAGA,uRAKJL,EAAWM,gBAAiB","file":"component---src-pages-index-md-5f83a04e6976fdf3a7c1.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/graphql-mesh-gateway/graphql-mesh-gateway/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst InlineAlert = makeShortcode(\"InlineAlert\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"what-is-adobe-api-manager\"\n    }}>{`What is Adobe API Manager?`}</h1>\n    <p>{`Adobe API Manager is a decoupled API platform that enables enterprise and mid-market developers to integrate private or third-party APIs and other software interfaces with Adobe products using Adobe IO. This allows businesses that need to access functionality across multiple systems to provide better end-user experiences. Adobe API Manager is Multi-Tenant, which means developers can configure multiple APIs and other sources and serve them through a single gateway. Developers can query the combined sources through a single GraphQL query. Adobe Commerce, for example, also supports GraphQL queries.`}</p>\n    <p>{`Adobe API Manager enables developers to integrate a GraphQL Mesh or third-party APIs with other Adobe products, like App Builder, Adobe IO Gateway, or other serverless technologies. By subscribing to near-real-time events, developers can allow these external systems to synchronize data, participate in distributed workflows, and generally react to events as they occur.`}</p>\n    <InlineAlert variant=\"info\" slots=\"text\" mdxType=\"InlineAlert\" />\n    <p>{`GraphQL is a query language for your API that lets you query exactly the information you need and only the information you need. GraphQL Mesh allows you to use GraphQL to query multiple data sources simultaneously.`}</p>\n    <h2 {...{\n      \"id\": \"why-graphql\"\n    }}>{`Why GraphQL?`}</h2>\n    <p>{`GraphQL has several advantages over REST and other APIs:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`GraphQL has predictable responses`}</strong>{`: With GraphQL, you specify what information your response should contain.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Faster response time`}</strong>{`: Since you can control what data appears in your response, there is less extraneous data slowing down your calls.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Defined Schema`}</strong>{`: With its well-defined set of types, GraphQL lets you know what data you can query.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"features\"\n    }}>{`Features`}</h2>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Adobe API Manager`}</strong>{` - A reverse proxy that accepts most API calls for many backend services`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Configurable Integrations`}</strong>{` - Low/No-code method to integrate with your own private APIs with Adobe Commerce and other Adobe products, and third-party APIs`}\n        {\n          /* The two features below likely refer to the App Builder and may need to be deleted before beta */\n        }\n      </li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Backwards Compatibility`}</strong>{` - Preserve existing APIs while gradually adopting new ones`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Extensibility`}</strong>{` - Customize and extend all of your APIs directly in the gateway without making changes to the API source`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"example-use-case\"\n    }}>{`Example use case`}</h2>\n    <p>{`Adobe Commerce users can consider Adobe API Manager as a low-code way to integrate other APIs to the Storefront and Storefront Management APIs. It also provides a way for the Storefront API and the Storefront Management APIs to communicate with each other.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}